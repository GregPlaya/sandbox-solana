"use strict";

var _templateObject = _taggedTemplateLiteral(["\n                        (function (d, t) {\n                            var bh = d.createElement(t), s = d.getElementsByTagName(t)[0];\n                            bh.type = 'text/javascript';\n                            bh.src = 'https://www.bugherd.com/sidebarv2.js?apikey=", "';\n                            s.parentNode.insertBefore(bh, s);\n                        })(document, 'script');"], ["\n                        (function (d, t) {\n                            var bh = d.createElement(t), s = d.getElementsByTagName(t)[0];\n                            bh.type = 'text/javascript';\n                            bh.src = 'https://www.bugherd.com/sidebarv2.js?apikey=", "';\n                            s.parentNode.insertBefore(bh, s);\n                        })(document, 'script');"]);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _commonTags = require("common-tags");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.onRenderBody = function (_ref, options) {
    var setPostBodyComponents = _ref.setPostBodyComponents;

    if (process.env.NODE_ENV !== "production" || options.showInProduction) {
        setPostBodyComponents([_react2.default.createElement("script", {
            key: "indigotree-bugherd",
            dangerouslySetInnerHTML: {
                __html: (0, _commonTags.stripIndent)(_templateObject, options.key)
            }
        })]);
    }
};